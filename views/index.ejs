<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
        <%= global.header %>
    </title>
    <link rel="icon" type="image/png" href="/seu.png" />
    <link rel="stylesheet" type="text/css"
        href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.js"></script>
</head>

<body>
    <!-- Semantic UI Container -->
    <div class="ui container">
        <!-- Page Header -->
        <div class="ui large text menu">
            <div class="item">
                <img src="/seu.png" />
            </div>
            <!-- Vertical Divider -->
            <div class="item">
                |
            </div>
            <div class="item">
                <img src="/seu-esg.png" class="ui tiny image" />
            </div>
            <a class="item" href="/">
                <h2 class="ui header">
                    <%= global.header %>
                </h2>
            </a>
        </div>

        <!-- Page Grid -->
        <div class="ui stackable grid">
            <!-- Sidebar Widgets Column -->
            <div class="four wide column">
                <!-- Upcoming Widget -->
                <h4 class="ui block top attached header">
                    <div class="content">
                        <i class="bullhorn alternate icon"></i>
                        Upcoming
                    </div>
                </h4>
                <div class="ui bottom attached segment">
                    <div class="content">
                        <div class="description">
                            <%= global.upcoming %>
                        </div>
                    </div>
                </div>

                <!-- Search Widget -->
                <h4 class="ui block top attached header">
                    <div class="content">
                        <i class="search icon"></i>
                        Search
                    </div>
                </h4>
                <div class="ui bottom attached segment">
                    <div class="content">
                        <div class="ui fluid icon input">
                            <input type="text" placeholder="Conf / Title / Presenter" id="search-input" />
                            <i class="search icon"></i>
                        </div>
                    </div>
                </div>

                <!-- Blogs Widget -->
                <h4 class="ui block top attached header">
                    <div class="content">
                        <i class="newspaper icon"></i>
                        Blogs
                    </div>
                </h4>
                <div class="ui bottom attached segment">
                    <div class="content">
                        <div class="ui bulleted list">
                            <% blogs.forEach(function(blog) { %>
                                <a class="item" href="/blog.html#<%= blog.id %>">
                                    <%= blog.title %>
                                </a>
                            <% }); %>
                        </div>
                    </div>
                </div>

                <!-- Useful Links Widget -->
                <h4 class="ui block top attached header">
                    <div class="content">
                        <i class="linkify icon"></i>
                        Useful Links
                    </div>
                </h4>
                <div class="ui bottom attached segment">
                    <div class="content">
                        <div class="ui bulleted list">
                            <% global.links.forEach(function(link) { %>
                                <a class="item" href="<%= link.url %>">
                                    <%= link.title %>
                                </a>
                                <% }); %>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Main Content Column -->
            <div class="twelve wide stretched column">
                <h4 class="ui block top attached header">
                    <div class="content">
                        <i class="calendar icon"></i>
                        Presentation Schedule
                    </div>
                </h4>
                <div class="ui attached segment">
                    <div class="content" id="schedule-container"></div>
                </div>
                <div class="ui bottom attached segment">
                    <div class="ui center aligned container">
                        <div class="ui tiny pagination menu" id="pagination"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Page Footer -->
        <div class="ui vertical segment">
            <div class="ui center aligned container">
                <div class="ui horizontal small divided link list">
                    <%= global.footer %>
                </div>
            </div>
        </div>
    </div>
</body>

<script src="/schedules.js"></script>

<script>
    const schedulesPerPage = <%- global.layout.schedulesPerPage %>
</script>

<script>
    let currentPage = 1
    let totalPage = Math.ceil(schedules.length / schedulesPerPage)
    let filteredSchedules = schedules
    const labelColors = ['red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'pink', 'brown']

    function hash(conf) {
        conf = conf.toLowerCase()
        let hash = 0
        for (let i = 0; i < conf.length; i++) {
            hash = (hash << 5) - hash + conf.charCodeAt(i)
            hash = hash & hash
        }
        return Math.abs(hash)
    }

    function includesIgnoreCase(str, keyword) {
        return str.toLowerCase().includes(keyword.toLowerCase())
    }


    function filterSchedules(keyword) {
        return schedules.filter((schedule) => (
            includesIgnoreCase(schedule.title, keyword) ||
            includesIgnoreCase(schedule.conf, keyword) ||
            includesIgnoreCase(schedule.presenter, keyword)
        ))
    }

    function sliceSchedules(schedules, page) {
        const start = (page - 1) * schedulesPerPage
        const end = start + schedulesPerPage
        return schedules.slice(start, end)
    }

    function pager(currentPage, totalPage) {
        if (totalPage <= 5) {
            return Array.from({ length: totalPage }, (_, i) => i + 1)
        }
        const pages = [];
        pages.push(1)
        for (let off = -1; off <= 1; off++) {
            const page = currentPage + off
            if (page > 1 && page < totalPage) {
                pages.push(page)
            }
        }
        pages.push(totalPage)
        if (pages[1] - pages[0] > 1) {
            pages.splice(1, 0, -1)
        }
        if (pages[pages.length - 1] - pages[pages.length - 2] > 1) {
            pages.splice(pages.length - 1, 0, -1)
        }
        return pages
    }

    function renderPagination(currentPage, totalPage) {
        const container = $('#pagination')[0]
        container.innerHTML = ''
        {
            const prev = document.createElement('a')
            prev.className = `icon item ${currentPage === 1 ? 'disabled' : ''}`
            prev.innerHTML = '<i class="left chevron icon"></i>'
            container.appendChild(prev)
        }
        for (let i of pager(currentPage, totalPage)) {
            if (i === -1) {
                const ellipsis = document.createElement('a')
                ellipsis.className = 'disabled item'
                ellipsis.innerHTML = '...'
                container.appendChild(ellipsis)
            } else {
                const page = document.createElement('a')
                page.className = i === currentPage ? 'active item' : 'item'
                page.innerHTML = i
                container.appendChild(page)
            }
        }
        {
            const next = document.createElement('a')
            next.className = `icon item ${currentPage === totalPage ? 'disabled' : ''
                }`
            next.innerHTML = '<i class="right chevron icon"></i>'
            container.appendChild(next)
        }
    }

    function renderSchedules(schedules) {
        const container = $('#schedule-container')[0]
        container.innerHTML = ''
        schedules.forEach((schedule) => {
            const div = document.createElement('div')
            const linksHTML = schedule.links
                .map((link) => `<a href="${link.url}">${link.title}</a>`)
                .join(' | ')

            div.className = 'ui vertical segment'
            div.innerHTML = `
                <h4><a class="ui ${labelColors[hash(schedule.conf) % labelColors.length]} ribbon label">
                    ${schedule.conf}
                </a>${schedule.title}</h4>
                <div class="ui list">
                    <div class="item">
                        <a class="description presenter">
                            <i class="user icon"></i>
                            ${schedule.presenter}
                        </a>
                    </div>
                    <div class="item">
                        <span class="description">
                            <i class="map marker alternate icon"></i>
                            ${schedule.location}
                        </span>
                    </div>
                    <div class="item">
                        <span class="description">
                            <i class="clock icon"></i>
                            ${schedule.time} ${schedule.date}
                        </span>
                    </div>
                    <div class="item">
                        <span class="description">
                            <i class="linkify icon"></i>
                            ${linksHTML}
                        </span>
                    </div>
                    ${schedule.dblp ? `<div class="item">
                        <span class="description">
                            <i class="file pdf icon"></i>
                            <a href="${schedule.dblp.url}" target="_blank">${schedule.dblp.url}</a>
                        </span>
                    </div>` : ''}
                </div>
            `
            container.appendChild(div)
        })
    }

    function applyFilter(keyword) {
        $('#search-input').val(keyword)
        $('#search-input').trigger('input')
    }

    $(document).ready(() => {
        const keyword = new URLSearchParams(window.location.search).get('q') || ''
        if (keyword) {
            applyFilter(keyword)
        } else {
            renderSchedules(sliceSchedules(filteredSchedules, currentPage));
            renderPagination(currentPage, totalPage)
        }
        
    })

    $('#pagination').on('click', 'a', function () {
        if ($(this).hasClass('disabled')) {
            return
        }
        if ($(this).hasClass('icon')) {
            if ($(this).find('i').hasClass('left')) {
                currentPage -= 1
            } else {
                currentPage += 1
            }
        } else {
            currentPage = parseInt($(this).text())
        }

        renderSchedules(sliceSchedules(filteredSchedules, currentPage))
        renderPagination(currentPage, totalPage)
    })

    $('#search-input').on('input', function () {
        const keyword = $(this).val().trim()
        window.history.replaceState({}, '', keyword ? `?q=${keyword}` : '/')

        filteredSchedules = filterSchedules(keyword)

        currentPage = 1
        totalPage = Math.ceil(filteredSchedules.length / schedulesPerPage)

        renderSchedules(sliceSchedules(filteredSchedules, currentPage))
        renderPagination(currentPage, totalPage)
    })

    $('#schedule-container').on('click', '.label', function () {
        applyFilter($(this).text().trim())
    })

    $('#schedule-container').on('click', '.presenter', function () {
        applyFilter($(this).text().trim())
    })

    window.onpopstate = () => {
        const keyword = new URLSearchParams(window.location.search).get('q') || ''
        applyFilter(keyword)
    }
</script>

</html>